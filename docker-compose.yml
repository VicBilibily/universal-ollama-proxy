version: '3.8'

services:
  universal-ollama-proxy:
    build:
      context: .
      dockerfile: Dockerfile
    image: universal-ollama-proxy:dev
    container_name: universal-ollama-proxy-dev
    restart: unless-stopped
    ports:
      - '11434:11434'
    environment:
      - NODE_ENV=development
      - PORT=11434
      - LOG_LEVEL=debug
      # 以下环境变量是根据 config/unified-providers.json 配置文件中定义的供应商动态读取的
      # 如果添加了新的供应商，请在此处添加对应的环境变量
      # 从外部环境变量或 .env 文件读取
      - VOLCENGINE_API_KEY=${VOLCENGINE_API_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - TENCENTDS_API_KEY=${TENCENTDS_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - MOONSHOT_API_KEY=${MOONSHOT_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - MODELSCOPE_API_KEY=${MODELSCOPE_API_KEY}
      - BIGMODEL_API_KEY=${BIGMODEL_API_KEY}
      # 添加新供应商时，在此添加对应的环境变量
    volumes:
      # 开发模式下挂载日志目录
      - ./logs:/app/logs
      # 挂载配置文件目录
      - ./config:/app/config:ro
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "const http=require('http');const req=http.request('http://localhost:11434/',r=>r.statusCode===200?process.exit(0):process.exit(1));req.on('error',()=>process.exit(1));req.end();",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - universal-proxy-network

networks:
  universal-proxy-network:
    driver: bridge
# 使用方法:
# 开发环境:
# 1. 复制 .env.example 到 .env 并填入配置
# 2. 运行: docker-compose up -d
# 3. 查看日志: docker-compose logs -f universal-ollama-proxy
# 4. 停止服务: docker-compose down
#
# 生产环境:
# 使用 docker-compose.prod.yml 文件
# docker-compose -f docker-compose.prod.yml up -d
